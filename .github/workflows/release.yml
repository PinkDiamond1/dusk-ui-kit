name: Release

on:
  push:
    paths:
      - ".changeset/**"
    branches:
      - main

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: "17.3.1"

      - name: Install pnpm
        run: npm i pnpm@latest -g

      - name: Install Dependencies
        run: pnpm i --frozen-lockfile
        env:
          GITHUB_TOKEN: ${{secrets.GH_PACKAGES_TOKEN}}

      - name: Recreate .npmrc
        run: |
          cat << EOF > "$HOME/.npmrc"
            //npm.pkg.github.com/:_authToken=${GITHUB_TOKEN} @dusk-network:registry=https://npm.pkg.github.com node-linker=hoisted shamefully-hoist=true strict-peer-dependencies=false
          EOF
        env:
          GITHUB_TOKEN: ${{secrets.GH_PACKAGES_TOKEN}}

      - name: Create Release Pull Request or Publish
        id: changesets
        uses: changesets/action@master
        with:
          version: pnpm version:ci
          commit: ":robot: (auto-commit) update package versions"
          title: ":bookmark: Version Packages"
          publish: pnpm release:ci
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Set Current Version
        if: steps.changesets.outputs.published == 'true'
        run: |
          CURRENT_VERSION=$(node -p 'require("./package.json").version')
          echo "CURRENT_VERSION=${CURRENT_VERSION}" >> $GITHUB_ENV

      - name: Tag Check
        if: steps.changesets.outputs.published == 'true'
        id: tag_check
        run: |
          GET_API_URL="https://api.github.com/repos/${GITHUB_REPOSITORY}/git/ref/tags/v${CURRENT_VERSION}"
          http_status_code=$(curl -LI $GET_API_URL -o /dev/null -w '%{http_code}\n' -s \
            -H "Authorization: token ${GITHUB_TOKEN}")
          if [ "$http_status_code" -ne "404" ] ; then
            echo "::set-output name=exists_tag::true"
          else
            echo "::set-output name=exists_tag::false"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Git Tag
        if: steps.changesets.outputs.published == 'true' && steps.tag_check.outputs.exists_tag == 'false'
        uses: azu/action-package-version-to-git-tag@v1
        with:
          version: ${{ env.CURRENT_VERSION }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          github_repo: ${{ github.repository }}
          git_commit_sha: ${{ github.sha }}
          git_tag_prefix: "v"

      - name: Create Release
        id: create_release
        if: steps.changesets.outputs.published == 'true' && steps.tag_check.outputs.exists_tag == 'false'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ env.CURRENT_VERSION }}
          release_name: UI Kit v${{ env.CURRENT_VERSION }}
          body: |
            Release of UI Kit v${{ env.CURRENT_VERSION }}
          draft: false
          prerelease: false

      - name: Discord Notification
        if: steps.changesets.outputs.published == 'true'
        uses: sarisia/actions-status-discord@v1
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          nodetail: true
          title: New version of `dusk-ui-kit` is ready!
          description: |
            Version `{{ env.CURRENT_VERSION }}`
            Click [here](https://github.com/dusk-network/dusk-ui-kit/releases/tag/v{{ env.CURRENT_VERSION }}) to download!
