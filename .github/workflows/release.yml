name: Release
on:
  push:
    paths:
      - ".changeset/**"
      - "packages/**"
    branches:
      - main
      - next
jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: "14.16.0"
          registry-url: "https://npm.pkg.github.com/"
          scope: "@dusk-network"

      # - name: Configure Git Actor
      #   run: |
      #     git config --global user.name "${{ github.actor }}"
      #     git config --global user.email "${{ github.actor }}@users.noreply.github.com"

      - name: Install Dependencies
        run: yarn install --immutable

      - name: Create Release Pull Request or Publish to npm
        uses: changesets/action@master
        with:
          version: yarn changeset version
          #publish: yarn release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # - name: Set Current Version
      #   shell: bash -ex {0}
      #   run: |
      #     CURRENT_VERSION=$(node -p 'require("./package.json").version')
      #     echo "CURRENT_VERSION=${CURRENT_VERSION}" >> $GITHUB_ENV

      # - name: Tag Check
      #   id: tag_check
      #   shell: bash -ex {0}
      #   run: |
      #     GET_API_URL="https://api.github.com/repos/${GITHUB_REPOSITORY}/git/ref/tags/v${CURRENT_VERSION}"
      #     http_status_code=$(curl -LI $GET_API_URL -o /dev/null -w '%{http_code}\n' -s \
      #       -H "Authorization: token ${GITHUB_TOKEN}")
      #     if [ "$http_status_code" -ne "404" ] ; then
      #       echo "::set-output name=exists_tag::true"
      #     else
      #       echo "::set-output name=exists_tag::false"
      #     fi
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # - name: Create Git Tag
      #   if: steps.tag_check.outputs.exists_tag == 'false'
      #   uses: azu/action-package-version-to-git-tag@v1
      #   with:
      #     version: ${{ env.CURRENT_VERSION }}
      #     github_token: ${{ secrets.GITHUB_TOKEN }}
      #     github_repo: ${{ github.repository }}
      #     git_commit_sha: ${{ github.sha }}
      #     git_tag_prefix: "v"

      # - name: Create Release
      #   id: create_release
      #   if: steps.tag_check.outputs.exists_tag == 'false'
      #   uses: actions/create-release@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     tag_name: v${{ env.CURRENT_VERSION }}
      #     # Copy Pull Request's tile and body to Release Note
      #     release_name: UI Kit v${{ env.CURRENT_VERSION }}
      #     body: |
      #       Release of UI Kit v${{ env.CURRENT_VERSION }}
      #     draft: false
      #     prerelease: false

      # - name: Publish Packages
      #   run: |
      #     yarn publish
      #   env:
      #     GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #     NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
